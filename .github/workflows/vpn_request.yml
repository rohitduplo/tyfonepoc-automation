name: VPN Request Workflow

on:
  repository_dispatch:
    types: [vpn_request]

jobs:
  vpn:
    runs-on: ubuntu-latest
    steps:
      - name: Print received payload
        run: |
          EXTRA_DATA_JSON='${{ github.event.client_payload.extra_data }}'
          echo "Extracted JSON: $EXTRA_DATA_JSON"
          echo "Customer Name: ${{ github.event.client_payload.customer_name }}"

          # Extract IPv4 CIDR from JSON
          ipv4_cidr=$(echo "$EXTRA_DATA_JSON" | jq -r '.ipv4_cidr')
          echo "ipv4_cidr: $ipv4_cidr"
          integrity_phase2=$(echo "$EXTRA_DATA_JSON" | jq -r '.integrity_phase2')
          echo "integrity_phase2: $integrity_phase2"
          dh_group_phase2=$(echo "$EXTRA_DATA_JSON" | jq -r '.dh_group_phase2')
          echo "dh_group_phase2: $dh_group_phase2"
          life_time_renegotiation=$(echo "$EXTRA_DATA_JSON" | jq -r '.life_time_renegotiation')
          echo "life_time_renegotiation: $life_time_renegotiation"
          ike_version_phase2=$(echo "$EXTRA_DATA_JSON" | jq -r '.ike_version_phase2')
          echo "ike_version_phase2: $ike_version_phase2"
          customer_gateway_ip=$(echo "$EXTRA_DATA_JSON" | jq -r '.customer_gateway_ip')
          echo "customer_gateway_ip: $customer_gateway_ip"
          echo "vpn_routing: ${{ github.event.client_payload.vpn_routing }}"
          echo "ASN: ${{ github.event.client_payload.asn }}"
          echo "encryption_phase1: ${{ github.event.client_payload.encryption_phase1 }}"
          echo "encryption_phase2: ${{ github.event.client_payload.encryption_phase2 }}"
          echo "integrity_phase1: ${{ github.event.client_payload.integrity_phase1 }}"
          echo "dh_group_phase1: ${{ github.event.client_payload.dh_group_phase1 }}"
          echo "lifetime_phase1: ${{ github.event.client_payload.lifetime_phase1 }}"
          echo "ike_version_phase1: ${{ github.event.client_payload.ike_version_phase1 }}"
          echo "Extra Data: $EXTRA_DATA_JSON"
